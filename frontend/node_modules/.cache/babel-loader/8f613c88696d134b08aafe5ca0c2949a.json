{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers/root_reducer';\nimport storage from 'redux-persist/lib/storage'; // const persistConfig = {\n//     key:'root',\n//     storage\n// }\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n// export default(preloadedState ={}) => {\n//     let store = createStore(\n//         persistedReducer,\n//         preloadedState,\n//         applyMiddleware(thunk, logger)\n//     );\n//     let persistor = persistStore(store);\n//     return {store, persistor};\n// } \n\nconst configureStore = (preloadedState = {}) => createStore(rootReducer, preloadedState, applyMiddleware(thunk, logger));\n\nexport default configureStore;","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/store/store.js"],"names":["createStore","applyMiddleware","thunk","logger","rootReducer","storage","configureStore","preloadedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAOC,OAAP,MAAoB,2BAApB,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAKA,MAAMC,cAAc,GAAG,CAACC,cAAc,GAAG,EAAlB,KACnBP,WAAW,CACPI,WADO,EAEPG,cAFO,EAGPN,eAAe,CAACC,KAAD,EAAQC,MAAR,CAHR,CADf;;AAQA,eAAeG,cAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers/root_reducer';\n\nimport storage from 'redux-persist/lib/storage';\n\n// const persistConfig = {\n//     key:'root',\n//     storage\n// }\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// export default(preloadedState ={}) => {\n//     let store = createStore(\n//         persistedReducer,\n//         preloadedState,\n//         applyMiddleware(thunk, logger)\n//     );\n//     let persistor = persistStore(store);\n//     return {store, persistor};\n\n// } \n\n\n\n\nconst configureStore = (preloadedState = {}) => (\n    createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunk, logger)\n    )\n);\n\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}