{"ast":null,"code":"// import { connect } from \"react-redux\";\n// import { selectRandomCafe, calculateDistance, applyExtraFilters } from \"../../util/filters_util\"\n// import { clearCafes, rerollCafes, fetchYelpCafeById } from \"../../actions/cafe_actions\";\n// import Cafe from '../cafe/cafe';\n// const mapStateToProps = state => {\n//     let cafes = Object.values(state.entities.cafes);\n//     let filters = state.entities.filters;\n//     let cafesDistance = calculateDistance(cafes)\n//     let filteredCafes = applyExtraFilters(cafesDistance)\n//     //Get random Yelp Cafe before coming into Props\n//     let randomCafe = selectRandomCafe(Object.values(state.entities.cafes))\n//     //This is yelpcafe being pulled from yelp api\n//     debugger\n//     return {\n//         cafes: cafes,\n//         filteredCafes: filteredCafes,\n//         filters: filters,\n//         loading: state.loading.indexLoading,\n//         randomCafe: randomCafe,\n//         yelpCafe: state.entities.yelpCafe,\n//     };\n// }\n// const mapDispatchToProps = dispatch => ({\n//   clearCafes: () => dispatch(clearCafes()),\n//   rerollCafes: cafes => dispatch(rerollCafes(cafes)),\n//   fetchYelpCafeById: id => dispatch(fetchYelpCafeById(id))\n// });\n// export default connect(mapStateToProps, mapDispatchToProps)(Cafe);","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/cafe/cafe_container.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAGA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import { connect } from \"react-redux\";\r\n// import { selectRandomCafe, calculateDistance, applyExtraFilters } from \"../../util/filters_util\"\r\n// import { clearCafes, rerollCafes, fetchYelpCafeById } from \"../../actions/cafe_actions\";\r\n// import Cafe from '../cafe/cafe';\r\n\r\n\r\n\r\n\r\n\r\n// const mapStateToProps = state => {\r\n\r\n//     let cafes = Object.values(state.entities.cafes);\r\n//     let filters = state.entities.filters;\r\n//     let cafesDistance = calculateDistance(cafes)\r\n\r\n\r\n//     let filteredCafes = applyExtraFilters(cafesDistance)\r\n\r\n\r\n\r\n//     //Get random Yelp Cafe before coming into Props\r\n//     let randomCafe = selectRandomCafe(Object.values(state.entities.cafes))\r\n\r\n//     //This is yelpcafe being pulled from yelp api\r\n  \r\n//     debugger\r\n//     return {\r\n//         cafes: cafes,\r\n//         filteredCafes: filteredCafes,\r\n//         filters: filters,\r\n//         loading: state.loading.indexLoading,\r\n//         randomCafe: randomCafe,\r\n//         yelpCafe: state.entities.yelpCafe,\r\n//     };\r\n\r\n// }\r\n\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   clearCafes: () => dispatch(clearCafes()),\r\n//   rerollCafes: cafes => dispatch(rerollCafes(cafes)),\r\n//   fetchYelpCafeById: id => dispatch(fetchYelpCafeById(id))\r\n  \r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Cafe);\r\n"]},"metadata":{},"sourceType":"module"}