{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; // import * as serviceWorker from './serviceWorker';\n\nimport axios from 'axios';\nimport Root from \"./components/root\";\nimport configureStore from './store/store';\nimport './index.css';\nimport getYelpCafeById from './util/yelp_api';\nimport jwt_decode from 'jwt-decode';\nimport { setAuthToken } from './util/session_api_util';\nimport { logout } from './actions/session_actions';\nimport { getUser } from './util/user_api_util'; // import { updateUserPreferences } from './util/session_api_util'\n\nimport { updateUserPreferences, login } from './actions/session_actions';\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // let store = configureStore({});\n  let store;\n\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n    const decodedUser = jwt_decode(localStorage.jwtToken);\n    const preloadedState = {\n      session: {\n        isAuthenticated: true,\n        user: decodedUser\n      }\n    }; // const client = Stitch.defaultAppClient;\n\n    store = configureStore(preloadedState); //checking if jwt passed its configuration\n    //getting it in seconds\n\n    const currentTime = Date.now() / 1000; //if decoded expiration time is less than currentTime\n\n    if (decodedUser.exp < currentTime) {\n      //Logout the user and redirect to the login page\n      store.dispatch(logout());\n      window.location.href = 'login';\n    }\n\n    const client = Stitch.defaultAppClient;\n    client.auth.loginWithCredential(new AnonymousCredential()); // client.auth.loginWithCredential(new AnonymousCredential());\n  } else {\n    store = configureStore();\n  } // function initializeAndLogin() {\n  //   const client = Stitch.defaultAppClient;\n  //   client.auth.loginWithCredential(new AnonymousCredential())\n  // }\n  // window.onload = initializeAndLogin;\n\n\n  window.store = store;\n  window.getState = store.getState;\n  const root = document.getElementById(\"root\"); //  ;\n\n  ReactDOM.render(React.createElement(Root, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), root);\n  window.axios = axios; // TESTING APIS\n\n  window.testId = \"WavvLdfdP6g8aZTtbBQHTw\";\n  window.getYelpCafeById = getYelpCafeById;\n  window.updateUserPreferences = updateUserPreferences;\n  window.getUser = getUser;\n  window.login = login;\n}); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//don't need\n// serviceWorker.unregister();\n//set axios on the window\n// TESTING APIS","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/index.js"],"names":["React","ReactDOM","App","axios","Root","configureStore","getYelpCafeById","jwt_decode","setAuthToken","logout","getUser","updateUserPreferences","login","document","addEventListener","store","localStorage","jwtToken","decodedUser","preloadedState","session","isAuthenticated","user","currentTime","Date","now","exp","dispatch","window","location","href","client","Stitch","defaultAppClient","auth","loginWithCredential","AnonymousCredential","getState","root","getElementById","render","testId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,cAAP,MAA2B,eAA3B;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,MAAR,QAAqB,2BAArB;AAEA,SAASC,OAAT,QAAwB,sBAAxB,C,CACA;;AACA,SAASC,qBAAT,EAAgCC,KAAhC,QAA6C,2BAA7C;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AAChD;AACA,MAAIC,KAAJ;;AAEA,MAAGC,YAAY,CAACC,QAAhB,EAAyB;AACrBT,IAAAA,YAAY,CAACQ,YAAY,CAACC,QAAd,CAAZ;AACA,UAAMC,WAAW,GAAGX,UAAU,CAACS,YAAY,CAACC,QAAd,CAA9B;AACA,UAAME,cAAc,GAAG;AAACC,MAAAA,OAAO,EAAE;AAACC,QAAAA,eAAe,EAAE,IAAlB;AAAwBC,QAAAA,IAAI,EAAEJ;AAA9B;AAAV,KAAvB,CAHqB,CAKrB;;AAEAH,IAAAA,KAAK,GAAGV,cAAc,CAACc,cAAD,CAAtB,CAPqB,CAQrB;AACA;;AACA,UAAMI,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAW,IAA/B,CAVqB,CAWrB;;AACA,QAAGP,WAAW,CAACQ,GAAZ,GAAkBH,WAArB,EAAiC;AAC7B;AACAR,MAAAA,KAAK,CAACY,QAAN,CAAelB,MAAM,EAArB;AACAmB,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,OAAvB;AACH;;AACD,UAAMC,MAAM,GAAGC,MAAM,CAACC,gBAAtB;AACAF,IAAAA,MAAM,CAACG,IAAP,CAAYC,mBAAZ,CAAgC,IAAIC,mBAAJ,EAAhC,EAlBqB,CAmBrB;AACH,GApBD,MAoBK;AACDrB,IAAAA,KAAK,GAAGV,cAAc,EAAtB;AACH,GA1B+C,CA4BhD;AACA;AACA;AACA;AAEA;;;AAEAuB,EAAAA,MAAM,CAACb,KAAP,GAAeA,KAAf;AACAa,EAAAA,MAAM,CAACS,QAAP,GAAkBtB,KAAK,CAACsB,QAAxB;AAEA,QAAMC,IAAI,GAAGzB,QAAQ,CAAC0B,cAAT,CAAwB,MAAxB,CAAb,CAtCgD,CAwChD;;AACAtC,EAAAA,QAAQ,CAACuC,MAAT,CAAgB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAAuCuB,IAAvC;AAEAV,EAAAA,MAAM,CAACzB,KAAP,GAAeA,KAAf,CA3CgD,CA6ChD;;AACAyB,EAAAA,MAAM,CAACa,MAAP,GAAgB,wBAAhB;AAEAb,EAAAA,MAAM,CAACtB,eAAP,GAAyBA,eAAzB;AAEAsB,EAAAA,MAAM,CAACjB,qBAAP,GAA+BA,qBAA/B;AACAiB,EAAAA,MAAM,CAAClB,OAAP,GAAiBA,OAAjB;AACAkB,EAAAA,MAAM,CAAChB,KAAP,GAAeA,KAAf;AACH,CArDD,E,CA0DA;AACA;AACA;AAEA;AACA;AAEA;AAGA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nimport Root from \"./components/root\";\nimport configureStore from './store/store';\nimport './index.css'\nimport getYelpCafeById from './util/yelp_api';\nimport jwt_decode from 'jwt-decode';\nimport {setAuthToken} from './util/session_api_util';\nimport {logout} from './actions/session_actions';\n\nimport { getUser } from './util/user_api_util'\n// import { updateUserPreferences } from './util/session_api_util'\nimport { updateUserPreferences, login } from './actions/session_actions'\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // let store = configureStore({});\n    let store;\n\n    if(localStorage.jwtToken){\n        setAuthToken(localStorage.jwtToken);\n        const decodedUser = jwt_decode(localStorage.jwtToken);\n        const preloadedState = {session: {isAuthenticated: true, user: decodedUser}};\n        \n        // const client = Stitch.defaultAppClient;\n\n        store = configureStore(preloadedState);\n        //checking if jwt passed its configuration\n        //getting it in seconds\n        const currentTime = Date.now()/1000;\n        //if decoded expiration time is less than currentTime\n        if(decodedUser.exp < currentTime){\n            //Logout the user and redirect to the login page\n            store.dispatch(logout());\n            window.location.href = 'login';\n        }\n        const client = Stitch.defaultAppClient;\n        client.auth.loginWithCredential(new AnonymousCredential());\n        // client.auth.loginWithCredential(new AnonymousCredential());\n    }else{\n        store = configureStore();\n    }\n\n    // function initializeAndLogin() {\n    //   const client = Stitch.defaultAppClient;\n    //   client.auth.loginWithCredential(new AnonymousCredential())\n    // }\n\n    // window.onload = initializeAndLogin;\n\n    window.store = store\n    window.getState = store.getState\n\n    const root = document.getElementById(\"root\");\n\n    //  ;\n    ReactDOM.render(<Root store={store}/>, root);\n\n    window.axios = axios;\n\n    // TESTING APIS\n    window.testId = \"WavvLdfdP6g8aZTtbBQHTw\";\n  \n    window.getYelpCafeById = getYelpCafeById\n\n    window.updateUserPreferences = updateUserPreferences\n    window.getUser = getUser\n    window.login = login\n})\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n//don't need\n// serviceWorker.unregister();\n\n//set axios on the window\n\n\n// TESTING APIS\n"]},"metadata":{},"sourceType":"module"}