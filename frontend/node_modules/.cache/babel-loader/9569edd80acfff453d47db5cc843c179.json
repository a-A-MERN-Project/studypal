{"ast":null,"code":"import { getCafe, getCafeByZipcode, getCafes, getCafeByFilters } from '../util/cafe_api_util';\nimport { getYelpCafeById, updateCafe } from '../util/cafe_api_util';\nexport const RECEIVE_CAFEBYZIPCODE = \"RECEIVE_CAFEBYZIPCODE\";\nexport const RECEIVE_CAFE = \"RECEIVE_CAFE\";\nexport const RECEIVE_CAFES = \"RECEIVE_CAFES\";\nexport const RECEIVE_CLEAR_CAFES = \"RECEIVE_CLEAR_CAFES\";\nexport const REROLL_CAFES = \"REROLL_CAFES\";\nexport const RECEIVE_YELP_CAFE = \"RECEIVE_YELP_CAFE\";\nexport const START_LOADING_FILTERED_CAFES = \"START_LOADING_FILTERED_CAFES\";\nexport const START_LOADING_SINGLE_CAFE = \"START_LOADING_SINGLE_CAFE\";\nexport const rerollCafes = cafes => ({\n  type: REROLL_CAFES,\n  cafes\n});\nexport const clearCafes = () => ({\n  type: RECEIVE_CLEAR_CAFES\n});\nexport const receiveCafe = cafe => ({\n  type: RECEIVE_CAFE,\n  cafe\n});\nexport const receiveCafes = cafes => ({\n  type: RECEIVE_CAFES,\n  cafes\n});\nexport const receiveYelpCafe = cafe => ({\n  type: RECEIVE_YELP_CAFE,\n  cafe\n}); // Loading Actions\n\nexport const startLoadingFilteredCafes = () => ({\n  type: START_LOADING_FILTERED_CAFES\n});\nexport const startLoadingSingleCafe = () => ({\n  type: START_LOADING_SINGLE_CAFE\n}); // API actions\n\nexport const fetchCafes = () => dispatch => getCafes().then(cafes => dispatch(receiveCafes(cafes))).catch(err => console.log(err));\nexport const fetchCafeByZipcode = zipcode => dispatch => getCafeByZipcode(zipcode).then(cafes => dispatch(receiveCafes(cafes))).catch(err => console.log(err));\nexport const fetchCafe = id => dispatch => getCafe(id).then(cafe => dispatch(receiveCafe(cafe))).catch(err => console.log(err));\nexport const fetchCafeByFilters = filters => dispatch => {\n  dispatch(startLoadingFilteredCafes());\n  return getCafeByFilters(filters).then(cafes => {\n    dispatch(receiveCafes(cafes));\n    return cafes;\n  });\n};\nexport const fetchYelpCafeById = id => dispatch => {\n  dispatch(startLoadingFilteredCafes());\n  return updateCafe(id, \"\");\n  return getYelpCafeById(id).then(cafe => {\n    dispatch(receiveYelpCafe(cafe.data));\n    return cafe.data;\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/actions/cafe_actions.js"],"names":["getCafe","getCafeByZipcode","getCafes","getCafeByFilters","getYelpCafeById","updateCafe","RECEIVE_CAFEBYZIPCODE","RECEIVE_CAFE","RECEIVE_CAFES","RECEIVE_CLEAR_CAFES","REROLL_CAFES","RECEIVE_YELP_CAFE","START_LOADING_FILTERED_CAFES","START_LOADING_SINGLE_CAFE","rerollCafes","cafes","type","clearCafes","receiveCafe","cafe","receiveCafes","receiveYelpCafe","startLoadingFilteredCafes","startLoadingSingleCafe","fetchCafes","dispatch","then","catch","err","console","log","fetchCafeByZipcode","zipcode","fetchCafe","id","fetchCafeByFilters","filters","fetchYelpCafeById","data"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,gBAAjB,EAAmCC,QAAnC,EAA6CC,gBAA7C,QAAoE,uBAApE;AACA,SAAQC,eAAR,EAAyBC,UAAzB,QAA0C,uBAA1C;AAGA,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,4BAA4B,GAAG,8BAArC;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AAIP,OAAO,MAAMC,WAAW,GAAGC,KAAK,KAAK;AACjCC,EAAAA,IAAI,EAAEN,YAD2B;AAEjCK,EAAAA;AAFiC,CAAL,CAAzB;AAMP,OAAO,MAAME,UAAU,GAAG,OAAO;AAC7BD,EAAAA,IAAI,EAAEP;AADuB,CAAP,CAAnB;AAKP,OAAO,MAAMS,WAAW,GAAGC,IAAI,KAAK;AAChCH,EAAAA,IAAI,EAAET,YAD0B;AAEhCY,EAAAA;AAFgC,CAAL,CAAxB;AAKP,OAAO,MAAMC,YAAY,GAAGL,KAAK,KAAK;AAClCC,EAAAA,IAAI,EAAER,aAD4B;AAElCO,EAAAA;AAFkC,CAAL,CAA1B;AAKP,OAAO,MAAMM,eAAe,GAAGF,IAAI,KAAK;AACpCH,EAAAA,IAAI,EAAEL,iBAD8B;AAEpCQ,EAAAA;AAFoC,CAAL,CAA5B,C,CAKP;;AAEA,OAAO,MAAMG,yBAAyB,GAAG,OAAO;AAC5CN,EAAAA,IAAI,EAAEJ;AADsC,CAAP,CAAlC;AAIP,OAAO,MAAMW,sBAAsB,GAAG,OAAO;AACzCP,EAAAA,IAAI,EAAEH;AADmC,CAAP,CAA/B,C,CAKP;;AAEA,OAAO,MAAMW,UAAU,GAAG,MAAMC,QAAQ,IACtCvB,QAAQ,GACLwB,IADH,CACQX,KAAK,IAAIU,QAAQ,CAACL,YAAY,CAACL,KAAD,CAAb,CADzB,EAEGY,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB,CADK;AAOP,OAAO,MAAMG,kBAAkB,GAAGC,OAAO,IAAIP,QAAQ,IACnDxB,gBAAgB,CAAC+B,OAAD,CAAhB,CACGN,IADH,CACQX,KAAK,IAAIU,QAAQ,CAACL,YAAY,CAACL,KAAD,CAAb,CADzB,EAEGY,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB,CADK;AAMP,OAAO,MAAMK,SAAS,GAAGC,EAAE,IAAIT,QAAQ,IACnCzB,OAAO,CAACkC,EAAD,CAAP,CACKR,IADL,CACUP,IAAI,IAAIM,QAAQ,CAACP,WAAW,CAACC,IAAD,CAAZ,CAD1B,EAEKQ,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB,CADG;AAOP,OAAO,MAAMO,kBAAkB,GAAGC,OAAO,IAAIX,QAAQ,IAAI;AACrDA,EAAAA,QAAQ,CAACH,yBAAyB,EAA1B,CAAR;AAEA,SAAOnB,gBAAgB,CAACiC,OAAD,CAAhB,CAA0BV,IAA1B,CAA+BX,KAAK,IAAI;AAC3CU,IAAAA,QAAQ,CAACL,YAAY,CAACL,KAAD,CAAb,CAAR;AACA,WAAOA,KAAP;AACH,GAHM,CAAP;AAKH,CARM;AAWP,OAAO,MAAMsB,iBAAiB,GAAIH,EAAD,IAAQT,QAAQ,IAAI;AACjDA,EAAAA,QAAQ,CAACH,yBAAyB,EAA1B,CAAR;AAEA,SAAOjB,UAAU,CAAC6B,EAAD,EAAK,EAAL,CAAjB;AACA,SAAO9B,eAAe,CAAC8B,EAAD,CAAf,CAAoBR,IAApB,CAAyBP,IAAI,IAAI;AACpCM,IAAAA,QAAQ,CAACJ,eAAe,CAACF,IAAI,CAACmB,IAAN,CAAhB,CAAR;AACA,WAAOnB,IAAI,CAACmB,IAAZ;AACH,GAHM,CAAP;AAKH,CATM","sourcesContent":["import {getCafe, getCafeByZipcode, getCafes, getCafeByFilters} from '../util/cafe_api_util';\r\nimport {getYelpCafeById, updateCafe} from '../util/cafe_api_util'\r\n\r\n\r\nexport const RECEIVE_CAFEBYZIPCODE = \"RECEIVE_CAFEBYZIPCODE\";\r\nexport const RECEIVE_CAFE = \"RECEIVE_CAFE\";\r\nexport const RECEIVE_CAFES = \"RECEIVE_CAFES\";\r\nexport const RECEIVE_CLEAR_CAFES = \"RECEIVE_CLEAR_CAFES\";\r\nexport const REROLL_CAFES = \"REROLL_CAFES\";\r\nexport const RECEIVE_YELP_CAFE = \"RECEIVE_YELP_CAFE\";\r\nexport const START_LOADING_FILTERED_CAFES = \"START_LOADING_FILTERED_CAFES\";\r\nexport const START_LOADING_SINGLE_CAFE = \"START_LOADING_SINGLE_CAFE\";\r\n\r\n\r\n\r\nexport const rerollCafes = cafes => ({\r\n    type: REROLL_CAFES,\r\n    cafes,\r\n\r\n})\r\n\r\nexport const clearCafes = () => ({\r\n    type: RECEIVE_CLEAR_CAFES,\r\n    \r\n})\r\n\r\nexport const receiveCafe = cafe => ({\r\n    type: RECEIVE_CAFE,\r\n    cafe,\r\n});\r\n\r\nexport const receiveCafes = cafes => ({\r\n    type: RECEIVE_CAFES,\r\n    cafes,\r\n});\r\n\r\nexport const receiveYelpCafe = cafe => ({\r\n    type: RECEIVE_YELP_CAFE,\r\n    cafe\r\n});\r\n\r\n// Loading Actions\r\n\r\nexport const startLoadingFilteredCafes = () => ({\r\n    type: START_LOADING_FILTERED_CAFES,\r\n});\r\n\r\nexport const startLoadingSingleCafe = () => ({\r\n    type: START_LOADING_SINGLE_CAFE,\r\n\r\n});\r\n\r\n// API actions\r\n\r\nexport const fetchCafes = () => dispatch => (\r\n  getCafes()\r\n    .then(cafes => dispatch(receiveCafes(cafes)))\r\n    .catch(err => console.log(err))\r\n);\r\n\r\n\r\nexport const fetchCafeByZipcode = zipcode => dispatch => (\r\n  getCafeByZipcode(zipcode)\r\n    .then(cafes => dispatch(receiveCafes(cafes)))\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nexport const fetchCafe = id => dispatch => (\r\n    getCafe(id)\r\n        .then(cafe => dispatch(receiveCafe(cafe)))\r\n        .catch(err => console.log(err)) \r\n);\r\n\r\n\r\nexport const fetchCafeByFilters = filters => dispatch => {\r\n    dispatch(startLoadingFilteredCafes());\r\n\r\n    return getCafeByFilters(filters).then(cafes => {\r\n        dispatch(receiveCafes(cafes));\r\n        return cafes;\r\n    })\r\n\r\n};\r\n\r\n\r\nexport const fetchYelpCafeById = (id) => dispatch => {\r\n    dispatch(startLoadingFilteredCafes());\r\n   \r\n    return updateCafe(id, \"\")\r\n    return getYelpCafeById(id).then(cafe => {\r\n        dispatch(receiveYelpCafe(cafe.data));\r\n        return cafe.data;\r\n    })\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}