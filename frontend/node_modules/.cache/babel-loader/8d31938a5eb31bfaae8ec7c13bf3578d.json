{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/updateProfile/test.js\";\nimport React from 'react';\nimport '../../reset.css';\nimport '../profile/profile.css';\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props); //  ;\n\n    this.state = {\n      id: this.props.user.id,\n      handle: this.props.user.handle,\n      email: this.props.user.email,\n      zipcode: this.props.user.zipcode,\n      updateProfile: \"false\",\n      errors: \"false\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.update = this.update.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n    this.openUpdate = this.openUpdate.bind(this);\n    this.closeUpdate = this.closeUpdate.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.props.user.id) {\n      this.props.updateProfileAct(this.props.user.id, this.state);\n    } else if (this.props.user._id) {\n      this.props.updateProfileAct(this.props.user._id, this.state);\n    } // componentWillUpdate(nextProps,nextState){\n    //      ;\n    //     if (!nextProps.user.email === this.state.user.email){\n    //         this.props.updateProfileAct(nextProps.user.id, nextProps.user);\n    //       }\n    // }\n\n  }\n\n  handleSubmit(e) {\n    e.preventDefault(); //  ;\n\n    this.props.updateProfileAct(this.props.user.id, this.state);\n    this.props.handler(); // this.setState({updateProfile:\"true\"});\n    // // also check if no errors \n    // if(this.state.updateProfile===\"false\"){\n    //     this.props.updateProfileAct(this.props.user.id, this.state);\n    // }else{\n    //     this.props.updateProfileAct(this.props.user._id, this.state);\n    // }\n    //this added so that when user updates Profile, it will setstate\n    //in profile page to trigger rerender of profile component\n\n    this.props.clearErrors();\n    this.props.handler();\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  renderErrors() {\n    if (this.props.errors) {\n      return Object.values(this.props.errors).map(err => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, err));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }\n  }\n\n  openUpdate() {\n    // debugger;\n    this.setState({\n      updatedProfile: \"true\"\n    });\n    this.setState({\n      handle: this.props.updatedUser.handle\n    });\n    this.setState({\n      email: this.props.updatedUser.email\n    });\n    this.setState({\n      zipcode: this.props.updatedUser.zipcode\n    });\n    this.props.clearErrors();\n  }\n\n  closeUpdate() {\n    this.setState({\n      updatedProfile: \"false\"\n    });\n    this.props.clearErrors();\n  }\n\n  render() {\n    if (this.state.updatedProfile === \"true\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"update-profile-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"update-profile-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"vertical-line-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"profile-labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Username:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"update-input\",\n        type: \"text\",\n        placeholder: \"New username\",\n        value: this.state.handle,\n        onChange: this.update(\"handle\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"profile-labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"update-input\",\n        type: \"text\",\n        placeholder: \"New email\",\n        value: this.state.email,\n        onChange: this.update(\"email\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"profile-labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Zipcode:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"update-input\",\n        type: \"text\",\n        placeholder: \"Change zipcode\",\n        value: this.state.zipcode,\n        onChange: this.update(\"zipcode\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"update-profile-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Update profile\"), React.createElement(\"button\", {\n        className: \"update-profile-close\",\n        onClick: this.closeUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Close\")), React.createElement(\"ul\", {\n        className: \"update-errors\",\n        onClick: this.closeUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.renderErrors())));\n    } else {\n      return React.createElement(\"img\", {\n        className: \"updateProfileImg\",\n        src: \"https://studypal-dev.s3-us-west-1.amazonaws.com/edit.png\",\n        onClick: this.openUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/updateProfile/test.js"],"names":["React","Test","Component","constructor","props","state","id","user","handle","email","zipcode","updateProfile","errors","handleSubmit","bind","update","renderErrors","openUpdate","closeUpdate","e","preventDefault","updateProfileAct","_id","handler","clearErrors","field","setState","currentTarget","value","Object","values","map","err","updatedProfile","updatedUser","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../reset.css';\nimport '../profile/profile.css';\n\nclass Test extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        //  ;\n        this.state = {\n            id: this.props.user.id,\n            handle: this.props.user.handle,\n            email: this.props.user.email,\n            zipcode: this.props.user.zipcode,\n            updateProfile: \"false\",\n            errors:\"false\"\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.update = this.update.bind(this);\n        this.renderErrors = this.renderErrors.bind(this)\n        \n        this.openUpdate = this.openUpdate.bind(this);\n        this.closeUpdate= this.closeUpdate.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if(this.props.user.id){\n            this.props.updateProfileAct(this.props.user.id, this.state);\n        }else if(this.props.user._id){\n            this.props.updateProfileAct(this.props.user._id, this.state);\n        }\n    // componentWillUpdate(nextProps,nextState){\n    //      ;\n    //     if (!nextProps.user.email === this.state.user.email){\n    //         this.props.updateProfileAct(nextProps.user.id, nextProps.user);\n    //       }\n    // }\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        //  ;\n        this.props.updateProfileAct(this.props.user.id, this.state);\n        this.props.handler();\n\n        // this.setState({updateProfile:\"true\"});\n        // // also check if no errors \n        // if(this.state.updateProfile===\"false\"){\n        //     this.props.updateProfileAct(this.props.user.id, this.state);\n        // }else{\n        //     this.props.updateProfileAct(this.props.user._id, this.state);\n        // }\n        \n        //this added so that when user updates Profile, it will setstate\n        //in profile page to trigger rerender of profile component\n        this.props.clearErrors();\n        this.props.handler();\n    }\n\n    update(field){\n        return e => this.setState({\n            [field]:e.currentTarget.value\n        });\n    };\n\n    renderErrors() {\n        if (this.props.errors){\n            return(\n                Object.values(this.props.errors).map((err) => (\n                    <li>\n                        {err}\n                    </li>\n                )\n            )\n        )          \n        }else{\n            return(\n                <div></div>\n            )\n        } \n    }\n\n    \n\n    openUpdate(){\n        // debugger;\n        this.setState({updatedProfile:\"true\"});\n        this.setState({handle:this.props.updatedUser.handle});\n        this.setState({email:this.props.updatedUser.email});\n        this.setState({zipcode:this.props.updatedUser.zipcode});\n        this.props.clearErrors();\n        \n    }\n\n    closeUpdate(){\n      this.setState({updatedProfile:\"false\"});\n      this.props.clearErrors();\n\n    }\n    \n\n    render(){\n        if (this.state.updatedProfile===\"true\"){\n            return(\n                <div>\n                    {/* <div className=\"editProfileButtonDiv\" >\n                            <button  className=\"editProfileButton\" onClick={this.closeUpdate} >x</button>\n                    </div> */}\n                    <div className=\"update-profile-div\">\n                        <form className=\"update-profile-form\"onSubmit={this.handleSubmit}>\n                            <div className=\"vertical-line-profile\"></div>\n                            <label className=\"profile-labels\">Username:</label>\n                            <br/>\n                            <input className=\"update-input\" type=\"text\" placeholder=\"New username\" value={this.state.handle} onChange= {this.update(\"handle\")}></input>\n                            <br/>\n                            <label className=\"profile-labels\">Email:</label>\n                            <br />\n                            <input className=\"update-input\" type=\"text\" placeholder=\"New email\" value={this.state.email} onChange={this.update(\"email\")}></input>\n                            <br/>\n                            <label className=\"profile-labels\">Zipcode:</label>\n                            <br />\n                            <input className=\"update-input\" type=\"text\" placeholder=\"Change zipcode\" value={this.state.zipcode} onChange={this.update(\"zipcode\")}></input>\n                            <br/>\n                            <button className=\"update-profile-button\">Update profile</button>\n                            <button className=\"update-profile-close\" onClick={this.closeUpdate}>Close</button>\n                        </form>\n                        <ul className=\"update-errors\" onClick={this.closeUpdate}>{this.renderErrors()}</ul>\n                        \n                    </div>  \n                </div>   \n            )\n        }else{\n            return(\n                <img className=\"updateProfileImg\" src=\"https://studypal-dev.s3-us-west-1.amazonaws.com/edit.png\" onClick={this.openUpdate}/>\n            )   \n        }\n    \n    }\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}