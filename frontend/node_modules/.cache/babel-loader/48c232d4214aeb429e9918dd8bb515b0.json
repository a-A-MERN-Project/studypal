{"ast":null,"code":"import * as SessionAPIUtil from \"../util/session_api_util\";\nimport * as UserAPIUtil from \"../util/user_api_util\";\nimport jwt_decode from 'jwt-decode'; // import SessionErrorsReducer from \"../reducers/session_errors_reducer\";\n\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const LOGOUT_CURRENT_USER = \"LOGOUT_CURRENT_USER\";\nexport const RECEIVE_ERRORS = \"RECEIVE_ERRORS\";\nexport const RECEIVE_USER_SIGN_IN = 'RECEIVE_USER_SIGN_IN';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const START_LOADING_LOGIN = \"START_LOADING_LOGIN\";\nexport const RECEIVE_PREFERENCES = \"RECEIVE_PREFERENCES\";\nexport const startLoadingLogin = () => ({\n  type: START_LOADING_LOGIN\n});\n\nconst receiveCurrentUser = currentUser => {\n  return {\n    type: RECEIVE_CURRENT_USER,\n    currentUser\n  };\n};\n\nconst logoutCurrentUser = () => ({\n  type: LOGOUT_CURRENT_USER\n});\n\nconst receiveErrors = errors => ({\n  type: RECEIVE_ERRORS,\n  errors\n}); //added by Fei\n\n\nconst receiveUserSignIn = currentUser => {\n  //  ; \n  return {\n    type: RECEIVE_USER_SIGN_IN,\n    currentUser\n  };\n};\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n\nconst receivePreferences = preferences => {\n  return {\n    type: RECEIVE_PREFERENCES,\n    preferences\n  };\n};\n\nexport const signup = user => dispatch => {\n  return SessionAPIUtil.signup(user).then(user => dispatch(receiveUserSignIn(user)), err => dispatch(receiveErrors(err.response.data)) // .catch(err => dispatch(receiveErrors(err.response.data)))\n  );\n}; //added by fei\n\nexport const login = user => dispatch => {\n  return SessionAPIUtil.login(user).then(res => {\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('jwtToken', token);\n    SessionAPIUtil.setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(receiveCurrentUser(decoded));\n  }).catch(err => {\n    dispatch(receiveErrors(err.response.data));\n  });\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  SessionAPIUtil.setAuthToken(false);\n  dispatch(logoutCurrentUser());\n};\nexport const updateProfileAct = (id, data) => dispatch => {\n  //  ;\n  return UserAPIUtil.updateProfile(id, data).then(user => dispatch(receiveUserSignIn(user))) // .then(user => dispatch(login({email:user.currentUser.data.email, password: user.currentUser.data.password})))\n  .catch(err => dispatch(receiveErrors(err.response.data))) // err => (dispatch(receiveErrors(err.response.data))))\n  ;\n};\nexport const updateUserPreferences = (id, preferences) => dispatch => {\n  return SessionAPIUtil.updateUserPreferences(id, preferences).then(preferences => dispatch(receivePreferences(preferences)), err => dispatch(receiveErrors(err.response.data)));\n}; // export const demoLogin = (user) => dispatch => {\n//     dispatch(startLoadingLogin());\n// return SessionAPIUtil.login(user)\n//   .then(res => {\n//     const { token } = res.data;\n//     localStorage.setItem(\"jwtToken\", token);\n//     SessionAPIUtil.setAuthToken(token);\n//     const decoded = jwt_decode(token);\n//     dispatch(receiveCurrentUser(decoded));\n//   })\n//   .catch(err => {\n//     dispatch(receiveErrors(err.response.data));\n//   });\n// }","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/actions/session_actions.js"],"names":["SessionAPIUtil","UserAPIUtil","jwt_decode","RECEIVE_CURRENT_USER","LOGOUT_CURRENT_USER","RECEIVE_ERRORS","RECEIVE_USER_SIGN_IN","CLEAR_ERRORS","START_LOADING_LOGIN","RECEIVE_PREFERENCES","startLoadingLogin","type","receiveCurrentUser","currentUser","logoutCurrentUser","receiveErrors","errors","receiveUserSignIn","clearErrors","receivePreferences","preferences","signup","user","dispatch","then","err","response","data","login","res","token","localStorage","setItem","setAuthToken","decoded","catch","logout","removeItem","updateProfileAct","id","updateProfile","updateUserPreferences"],"mappings":"AAAA,OAAO,KAAKA,cAAZ,MAAgC,0BAAhC;AACA,OAAO,KAAKC,WAAZ,MAA6B,uBAA7B;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AACpCC,EAAAA,IAAI,EAAEH;AAD8B,CAAP,CAA1B;;AAIP,MAAMI,kBAAkB,GAAIC,WAAD,IAAiB;AACxC,SAAO;AACHF,IAAAA,IAAI,EAAER,oBADH;AAEHU,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAMC,iBAAiB,GAAG,OAAO;AAC7BH,EAAAA,IAAI,EAAEP;AADuB,CAAP,CAA1B;;AAIA,MAAMW,aAAa,GAAGC,MAAM,KAAK;AAC7BL,EAAAA,IAAI,EAAEN,cADuB;AAE7BW,EAAAA;AAF6B,CAAL,CAA5B,C,CAKA;;;AACA,MAAMC,iBAAiB,GAAIJ,WAAD,IAAiB;AACvC;AACA,SAAO;AACPF,IAAAA,IAAI,EAAEL,oBADC;AAEPO,IAAAA;AAFO,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMK,WAAW,GAAG,MAAM;AAC7B,SAAO;AACHP,IAAAA,IAAI,EAACJ;AADF,GAAP;AAGH,CAJM;;AAMP,MAAMY,kBAAkB,GAAIC,WAAD,IAAiB;AACxC,SAAQ;AACRT,IAAAA,IAAI,EAAEF,mBADE;AAERW,IAAAA;AAFQ,GAAR;AAGH,CAJD;;AAMA,OAAO,MAAMC,MAAM,GAAKC,IAAD,IAAUC,QAAQ,IAAI;AAEzC,SACIvB,cAAc,CAACqB,MAAf,CAAsBC,IAAtB,EACKE,IADL,CACWF,IAAD,IAAUC,QAAQ,CAACN,iBAAiB,CAACK,IAAD,CAAlB,CAD5B,EAEIG,GAAG,IAAKF,QAAQ,CAACR,aAAa,CAACU,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAd,CAFpB,CAGI;AAHJ,GADJ;AAOH,CATM,C,CAWP;;AACA,OAAO,MAAMC,KAAK,GAAIN,IAAD,IAAUC,QAAQ,IAAI;AAEvC,SAAOvB,cAAc,CAAC4B,KAAf,CAAqBN,IAArB,EAA2BE,IAA3B,CAAgCK,GAAG,IAAI;AAC1C,UAAM;AAACC,MAAAA;AAAD,QAAUD,GAAG,CAACF,IAApB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AAEA9B,IAAAA,cAAc,CAACiC,YAAf,CAA4BH,KAA5B;AACA,UAAMI,OAAO,GAAGhC,UAAU,CAAC4B,KAAD,CAA1B;AAEAP,IAAAA,QAAQ,CAACX,kBAAkB,CAACsB,OAAD,CAAnB,CAAR;AACH,GARM,EASNC,KATM,CASAV,GAAG,IAAI;AAACF,IAAAA,QAAQ,CAACR,aAAa,CAACU,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAd,CAAR;AACd,GAVM,CAAP;AAWH,CAbM;AAeP,OAAO,MAAMS,MAAM,GAAG,MAAMb,QAAQ,IAAI;AAEpCQ,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACArC,EAAAA,cAAc,CAACiC,YAAf,CAA4B,KAA5B;AACAV,EAAAA,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;AACH,CALM;AAOP,OAAO,MAAMwB,gBAAgB,GAAG,CAACC,EAAD,EAAKZ,IAAL,KAAcJ,QAAQ,IAAI;AACtD;AACA,SACItB,WAAW,CAACuC,aAAZ,CAA0BD,EAA1B,EAA8BZ,IAA9B,EACKH,IADL,CACWF,IAAD,IAAUC,QAAQ,CAACN,iBAAiB,CAACK,IAAD,CAAlB,CAD5B,EAEI;AAFJ,GAGKa,KAHL,CAGWV,GAAG,IAAGF,QAAQ,CAACR,aAAa,CAACU,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAd,CAHzB,CADJ,CAKQ;AALR;AAQH,CAVM;AAWP,OAAO,MAAMc,qBAAqB,GAAG,CAACF,EAAD,EAAKnB,WAAL,KAAqBG,QAAQ,IAAI;AAClE,SACIvB,cAAc,CAACyC,qBAAf,CAAqCF,EAArC,EAAyCnB,WAAzC,EACKI,IADL,CACWJ,WAAD,IAAiBG,QAAQ,CAACJ,kBAAkB,CAACC,WAAD,CAAnB,CADnC,EAEQK,GAAG,IAAIF,QAAQ,CAACR,aAAa,CAACU,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAd,CAFvB,CADJ;AAKH,CANM,C,CAQP;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as SessionAPIUtil from \"../util/session_api_util\";\nimport * as UserAPIUtil from \"../util/user_api_util\";\nimport jwt_decode from 'jwt-decode';\n// import SessionErrorsReducer from \"../reducers/session_errors_reducer\";\n\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const LOGOUT_CURRENT_USER = \"LOGOUT_CURRENT_USER\";\nexport const RECEIVE_ERRORS = \"RECEIVE_ERRORS\";\nexport const RECEIVE_USER_SIGN_IN = 'RECEIVE_USER_SIGN_IN';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const START_LOADING_LOGIN = \"START_LOADING_LOGIN\";\nexport const RECEIVE_PREFERENCES = \"RECEIVE_PREFERENCES\";\n\nexport const startLoadingLogin = () => ({\n    type: START_LOADING_LOGIN\n})\n\nconst receiveCurrentUser = (currentUser) => {\n    return({\n        type: RECEIVE_CURRENT_USER,\n        currentUser\n    });\n};\n\nconst logoutCurrentUser = () => ({\n    type: LOGOUT_CURRENT_USER\n});\n\nconst receiveErrors = errors => ({\n    type: RECEIVE_ERRORS,\n    errors\n});\n\n//added by Fei\nconst receiveUserSignIn = (currentUser) => {\n    //  ; \n    return({\n    type: RECEIVE_USER_SIGN_IN,\n    currentUser\n});\n};\n\nexport const clearErrors = () => {\n    return({\n        type:CLEAR_ERRORS\n    })\n}\n\nconst receivePreferences = (preferences) => {\n    return ({\n    type: RECEIVE_PREFERENCES,\n    preferences})\n}\n\nexport const signup  = (user) => dispatch => {\n     \n    return(\n        SessionAPIUtil.signup(user)\n            .then((user) => dispatch(receiveUserSignIn(user)),\n            err => (dispatch(receiveErrors(err.response.data)))\n            // .catch(err => dispatch(receiveErrors(err.response.data)))\n        )\n    );\n};\n\n//added by fei\nexport const login = (user) => dispatch => {\n     \n    return SessionAPIUtil.login(user).then(res => {\n        const {token} = res.data;\n        localStorage.setItem('jwtToken', token);\n\n        SessionAPIUtil.setAuthToken(token); \n        const decoded = jwt_decode(token);\n         \n        dispatch(receiveCurrentUser(decoded));\n    })\n    .catch(err => {dispatch(receiveErrors(err.response.data));\n    });\n};\n\nexport const logout = () => dispatch => {\n     \n    localStorage.removeItem('jwtToken');\n    SessionAPIUtil.setAuthToken(false);\n    dispatch(logoutCurrentUser());\n};\n\nexport const updateProfileAct = (id, data) => dispatch => {\n    //  ;\n    return(\n        UserAPIUtil.updateProfile(id, data)\n            .then((user) => dispatch(receiveUserSignIn(user)))\n            // .then(user => dispatch(login({email:user.currentUser.data.email, password: user.currentUser.data.password})))\n            .catch(err=> dispatch(receiveErrors(err.response.data)))\n            // err => (dispatch(receiveErrors(err.response.data))))\n    );\n   \n};\nexport const updateUserPreferences = (id, preferences) => dispatch => {\n    return (\n        SessionAPIUtil.updateUserPreferences(id, preferences)\n            .then((preferences) => dispatch(receivePreferences(preferences)),\n                err => dispatch(receiveErrors(err.response.data))\n            ))\n}\n\n// export const demoLogin = (user) => dispatch => {\n//     dispatch(startLoadingLogin());\n\n// return SessionAPIUtil.login(user)\n//   .then(res => {\n//     const { token } = res.data;\n//     localStorage.setItem(\"jwtToken\", token);\n\n//     SessionAPIUtil.setAuthToken(token);\n//     const decoded = jwt_decode(token);\n\n//     dispatch(receiveCurrentUser(decoded));\n//   })\n//   .catch(err => {\n//     dispatch(receiveErrors(err.response.data));\n//   });\n// }\n"]},"metadata":{},"sourceType":"module"}