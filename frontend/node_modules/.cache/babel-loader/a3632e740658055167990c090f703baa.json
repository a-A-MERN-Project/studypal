{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/cafe/cafe.jsx\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { distance } from '../../util/distance_util';\nimport ShowMap from \"../map/show_map\";\nimport \"../../stylesheets/map.scss\";\nimport \"./cafe.scss\";\nimport LoadingPage from './loader';\nimport NavBar from \"../navbar/navbar_container\";\nimport Modal from \"../modal/modal_container\";\n\nclass Cafe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomCafe: \"\",\n      // USE THIS FOR MAIN PHOTO\n      cafeFromYelpApi: \"\",\n      //THIS HAS YELP API DATA\n      leftOverCafes: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.reRoll = this.reRoll.bind(this);\n    this.calculateDistance = this.calculateDistance.bind(this);\n    this.calculateTime = this.calculateTime.bind(this);\n    this.applyExtraFilters = this.applyExtraFilters.bind(this);\n  }\n\n  selectRandomCafe(cafe_array) {\n    // Lets filter cafes before we select a random cafe\n    return cafe_array[Math.floor(Math.random() * cafe_array.length)];\n  }\n\n  formatTime(fourDigitTime) {\n    let hours24 = parseInt(fourDigitTime.substring(0, 2));\n    let hours = (hours24 + 11) % 12 + 1;\n    let amPm = hours24 > 11 ? \"pm\" : \"am\";\n    let minutes = fourDigitTime.substring(2);\n    return hours + \":\" + minutes + amPm;\n  }\n\n  calculateTime(hours) {\n    let dateApi = new Date();\n    let day = dateApi.getDay();\n    if (!hours) return null;\n\n    if (!hours[0].open[day]) {\n      return \"Unavailable Time For This Day\";\n    } else {\n      return this.formatTime(hours[0].open[day].end);\n    }\n  }\n\n  calculateDistance(cafes) {\n    //Return array with cafes distance\n    let addedDistance = cafes.map(cafe => {\n      cafe.distance_away = distance(this.props.filters.my_lat, this.props.filters.my_lng, cafe.coordinates_latitude, cafe.coordinates_longitude);\n      return cafe;\n    });\n    return addedDistance;\n  }\n\n  applyExtraFilters(cafes) {\n    return cafes.filter(cafe => cafe.distance_away < this.props.filters.miles_away);\n  }\n\n  reRoll() {\n    // Removes current YelpCafe from array\n    let leftOverCafes = this.props.cafes.filter(cafe => {\n      return cafe.id !== this.props.yelpCafe.id;\n    }); // Puts into Redux cycle again\n\n    this.props.rerollCafes(leftOverCafes);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.reRoll();\n  }\n\n  componentDidMount() {\n    if (Object.keys(this.props.filters).length === 0) {\n      this.props.history.push(`/`);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.cafes.length === 0) {\n      this.props.history.push(`/retry`);\n    }\n\n    if (prevProps.cafes !== cafes) {}\n  }\n\n  render() {\n    const {\n      loading\n    } = this.props;\n\n    if (loading) {\n      return React.createElement(LoadingPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    }\n\n    if (this.props.cafes.length === 0) return null; // If no curr yelpcafe exist, request from API\n\n    if (Object.keys(this.props.yelpCafe).length === 0) {\n      debugger;\n      this.props.fetchYelpCafeById(this.props.randomCafe.id).catch(err => this.props.history.push(`/errors`));\n    }\n\n    if (Object.keys(this.props.yelpCafe).length === 0) return null;\n    let display_address = this.props.yelpCafe.location.display_address;\n    let time = this.calculateTime(this.props.yelpCafe.hours);\n    let lat = this.props.yelpCafe.coordinates.latitude;\n    let lng = this.props.yelpCafe.coordinates.longitude;\n    let distance = this.props.randomCafe.distance_away;\n    let noiseLevel = this.props.randomCafe.noise_level;\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cafe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.props.yelpCafe.name), React.createElement(\"a\", {\n      className: \"yelp\",\n      href: this.props.yelpCafe.url,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"yelp-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"View on Yelp\"))), React.createElement(\"div\", {\n      className: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Open until \", time, \" Today\"), React.createElement(\"div\", {\n      className: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, display_address[0], \", \", display_address[1]), React.createElement(\"div\", {\n      className: \"shelter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"** Shelter in Place May Affect Hours **\")), React.createElement(\"img\", {\n      className: \"photo\",\n      onClick: () => this.props.openModal(\"lol\"),\n      src: this.props.yelpCafe.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(ShowMap, {\n      key: lat,\n      lat: lat,\n      lng: lng,\n      my_lat: this.props.filters.my_lat,\n      my_lng: this.props.filters.my_lng,\n      yelp_link: this.props.yelpCafe.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      className: \"new-cafe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"I'm not sold. \\xA0\", React.createElement(\"span\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Show me another cafe!\"))));\n  }\n\n}\n\nexport default Cafe;","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/cafe/cafe.jsx"],"names":["React","axios","distance","ShowMap","LoadingPage","NavBar","Modal","Cafe","Component","constructor","props","state","randomCafe","cafeFromYelpApi","leftOverCafes","handleClick","bind","reRoll","calculateDistance","calculateTime","applyExtraFilters","selectRandomCafe","cafe_array","Math","floor","random","length","formatTime","fourDigitTime","hours24","parseInt","substring","hours","amPm","minutes","dateApi","Date","day","getDay","open","end","cafes","addedDistance","map","cafe","distance_away","filters","my_lat","my_lng","coordinates_latitude","coordinates_longitude","filter","miles_away","id","yelpCafe","rerollCafes","e","preventDefault","componentDidMount","Object","keys","history","push","componentDidUpdate","prevProps","prevState","render","loading","fetchYelpCafeById","catch","err","display_address","location","time","lat","coordinates","latitude","lng","longitude","noiseLevel","noise_level","name","url","openModal","image_url"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport { distance } from '../../util/distance_util'\r\nimport ShowMap from \"../map/show_map\";\r\nimport \"../../stylesheets/map.scss\";\r\nimport \"./cafe.scss\"\r\nimport LoadingPage from './loader';\r\nimport NavBar from \"../navbar/navbar_container\";\r\n\r\nimport Modal from \"../modal/modal_container\";\r\n\r\n\r\n\r\nclass Cafe extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            randomCafe: \"\", // USE THIS FOR MAIN PHOTO\r\n            cafeFromYelpApi: \"\", //THIS HAS YELP API DATA\r\n            leftOverCafes: [],\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.reRoll = this.reRoll.bind(this);\r\n        this.calculateDistance = this.calculateDistance.bind(this);\r\n        this.calculateTime = this.calculateTime.bind(this);\r\n        this.applyExtraFilters = this.applyExtraFilters.bind(this);\r\n    }\r\n\r\n\r\n\r\n\r\n    selectRandomCafe(cafe_array) {\r\n        // Lets filter cafes before we select a random cafe\r\n        return cafe_array[Math.floor(Math.random() * cafe_array.length)];\r\n\r\n    }\r\n\r\n\r\n    formatTime(fourDigitTime) {\r\n        let hours24 = parseInt(fourDigitTime.substring(0, 2));\r\n        let hours = ((hours24 + 11) % 12) + 1;\r\n        let amPm = hours24 > 11 ? \"pm\" : \"am\";\r\n        let minutes = fourDigitTime.substring(2);\r\n        return hours + \":\" + minutes + amPm;\r\n    }\r\n\r\n    calculateTime(hours) {\r\n        let dateApi = new Date();\r\n        let day = dateApi.getDay();\r\n        if (!hours) return null\r\n        if (!hours[0].open[day]) {\r\n            return \"Unavailable Time For This Day\"\r\n        } else {\r\n            return this.formatTime(hours[0].open[day].end);\r\n        }\r\n\r\n    }\r\n\r\n    calculateDistance(cafes) {\r\n        //Return array with cafes distance\r\n        let addedDistance = cafes.map(cafe => {\r\n            cafe.distance_away = distance(\r\n                this.props.filters.my_lat,\r\n                this.props.filters.my_lng,\r\n                cafe.coordinates_latitude,\r\n                cafe.coordinates_longitude,\r\n            );\r\n            return cafe;\r\n        })\r\n\r\n        return addedDistance\r\n\r\n    }\r\n\r\n\r\n    applyExtraFilters(cafes) {\r\n        return cafes.filter(cafe => cafe.distance_away < this.props.filters.miles_away);\r\n    }\r\n\r\n\r\n    reRoll() {\r\n\r\n        // Removes current YelpCafe from array\r\n        let leftOverCafes = this.props.cafes.filter(cafe => {\r\n            return cafe.id !== this.props.yelpCafe.id;\r\n        });\r\n\r\n        // Puts into Redux cycle again\r\n        this.props.rerollCafes(leftOverCafes);\r\n    }\r\n\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n        this.reRoll();\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (Object.keys(this.props.filters).length === 0){\r\n            this.props.history.push(`/`);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.cafes.length === 0) {\r\n            this.props.history.push(`/retry`)\r\n        }\r\n\r\n        if (prevProps.cafes !== cafes){\r\n          \r\n        }\r\n\r\n        \r\n      }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const { loading } = this.props;\r\n        if (loading) { return <LoadingPage />; }\r\n        if (this.props.cafes.length === 0) return null;\r\n\r\n        // If no curr yelpcafe exist, request from API\r\n        if (Object.keys(this.props.yelpCafe).length === 0) {\r\n              debugger\r\n              this.props\r\n                .fetchYelpCafeById(this.props.randomCafe.id)\r\n                .catch(err => this.props.history.push(`/errors`));\r\n          }\r\n\r\n        if (Object.keys(this.props.yelpCafe).length === 0) return null\r\n\r\n\r\n        let display_address = this.props.yelpCafe.location.display_address;\r\n        let time = this.calculateTime(this.props.yelpCafe.hours);\r\n        let lat = this.props.yelpCafe.coordinates.latitude;\r\n        let lng = this.props.yelpCafe.coordinates.longitude;\r\n        let distance = this.props.randomCafe.distance_away;\r\n        let noiseLevel = this.props.randomCafe.noise_level;\r\n\r\n\r\n        return (\r\n          <div className=\"page\">\r\n            <NavBar />\r\n            <div className=\"all\">\r\n              <div className=\"left-right\">\r\n                <div className=\"cafe\">\r\n                  <div className=\"profile\">\r\n                    <div className=\"title\">\r\n                      <div className=\"name\">{this.props.yelpCafe.name}</div>\r\n                      <a\r\n                        className=\"yelp\"\r\n                        href={this.props.yelpCafe.url}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <div id=\"yelp-text\">View on Yelp</div>\r\n                      </a>\r\n                    </div>\r\n\r\n                    <div className=\"time\">Open until {time} Today</div>\r\n\r\n                    <div className=\"address\">\r\n                      {display_address[0]}, {display_address[1]}\r\n                    </div>\r\n\r\n                    <div className=\"shelter\">\r\n                      ** Shelter in Place May Affect Hours **\r\n                    </div>\r\n                  </div>\r\n\r\n                  <img\r\n                    className=\"photo\"\r\n                    onClick={() => this.props.openModal(\"lol\")}\r\n                    src={this.props.yelpCafe.image_url}\r\n                  ></img>\r\n                </div>\r\n\r\n                <div className=\"map\">\r\n                  <ShowMap\r\n                    key={lat}\r\n                    lat={lat}\r\n                    lng={lng}\r\n                    my_lat={this.props.filters.my_lat}\r\n                    my_lng={this.props.filters.my_lng}\r\n                    yelp_link={this.props.yelpCafe.url}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <span className=\"new-cafe\">\r\n                I'm not sold. &nbsp;\r\n                <span onClick={this.handleClick}>Show me another cafe!</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Cafe;"]},"metadata":{},"sourceType":"module"}