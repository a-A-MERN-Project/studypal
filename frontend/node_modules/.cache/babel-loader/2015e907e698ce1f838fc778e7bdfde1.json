{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/cafe/cafe.jsx\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { distance } from '../../util/distance_util';\nimport ShowMap from \"../map/show_map\";\nimport \"../../stylesheets/map.scss\";\nimport \"./cafe.scss\";\nimport LoadingPage from './loader';\n\nconst apiKey = require(\"../../keys/keys\").YELP_API_KEY; // DELETE KEY LATER!!\n\n\nconst TAKEOUTLATER = \"UZittz7h5GXfqGN6CtGVeBd9Slxryw_l5kvsV8fRpS4D3jT9Zk0GnLWhvUsziHOoI52fl290Sg3JqCmJXPFxk3ooFdqTgSzja1AtBMQjTRQbXz2bDNEoc6TqZVBwXnYx\";\n\nclass Cafe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomCafe: \"\",\n      // USE THIS FOR MAIN PHOTO\n      cafeFromYelpApi: \"\",\n      //THIS HAS YELP API DATA\n      leftOverCafes: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.reRoll = this.reRoll.bind(this);\n    this.calculateDistance = this.calculateDistance.bind(this);\n    this.calculateTime = this.calculateTime.bind(this);\n    this.applyExtraFilters = this.applyExtraFilters.bind(this);\n  }\n\n  selectRandomCafe(cafe_array) {\n    // Lets filter cafes before we select a random cafe\n    return cafe_array[Math.floor(Math.random() * cafe_array.length)];\n  }\n\n  formatTime(fourDigitTime) {\n    let hours24 = parseInt(fourDigitTime.substring(0, 2));\n    let hours = (hours24 + 11) % 12 + 1;\n    let amPm = hours24 > 11 ? \"pm\" : \"am\";\n    let minutes = fourDigitTime.substring(2);\n    return hours + \":\" + minutes + amPm;\n  }\n\n  calculateTime(hours) {\n    let dateApi = new Date();\n    let day = dateApi.getDay();\n    if (!hours) return null;\n\n    if (!hours[0].open[day]) {\n      return \"Unavailable Time For This Day\";\n    } else {\n      return this.formatTime(hours[0].open[day].end);\n    }\n  }\n\n  calculateDistance(cafes) {\n    //Return array with cafes distance\n    let addedDistance = cafes.map(cafe => {\n      cafe.distance_away = distance(this.props.filters.my_lat, this.props.filters.my_lng, cafe.coordinates_latitude, cafe.coordinates_longitude);\n      return cafe;\n    });\n    return addedDistance;\n  }\n\n  applyExtraFilters(cafes) {\n    return cafes.filter(cafe => cafe.distance_away < this.props.filters.miles_away);\n  }\n\n  reRoll() {\n    this.props.rerollCafes(this.state.leftOverCafes);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.reRoll();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.randomCafe !== this.props.randomCafe) {\n      yelp;\n    }\n  }\n\n  render() {\n    debugger;\n    const {\n      loading\n    } = this.props;\n\n    if (loading) {\n      return React.createElement(LoadingPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    }\n\n    if (this.props.cafes.length === 0) return null;\n    if (!this.props.yelpCafe) return null;\n    debugger;\n    let display_address = this.props.yelpCafe.location.display_address;\n    let time = this.calculateTime(this.props.yelpCafe.hours);\n    let lat = this.props.yelpCafe.coordinates.latitude;\n    let lng = this.props.yelpCafe.coordinates.longitude;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.props.yelpCafe.name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Open until \", time, \" Today\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, display_address[0], \", \", display_address[1]), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: this.props.yelpCafe.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"View on Yelp\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.props.yelpCafe.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(ShowMap, {\n      key: lat,\n      lat: lat,\n      lng: lng,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Show me another cafe!\"));\n  }\n\n}\n\nexport default Cafe;","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/cafe/cafe.jsx"],"names":["React","axios","distance","ShowMap","LoadingPage","apiKey","require","YELP_API_KEY","TAKEOUTLATER","Cafe","Component","constructor","props","state","randomCafe","cafeFromYelpApi","leftOverCafes","handleClick","bind","reRoll","calculateDistance","calculateTime","applyExtraFilters","selectRandomCafe","cafe_array","Math","floor","random","length","formatTime","fourDigitTime","hours24","parseInt","substring","hours","amPm","minutes","dateApi","Date","day","getDay","open","end","cafes","addedDistance","map","cafe","distance_away","filters","my_lat","my_lng","coordinates_latitude","coordinates_longitude","filter","miles_away","rerollCafes","e","preventDefault","componentDidUpdate","prevProps","prevState","yelp","render","loading","yelpCafe","display_address","location","time","lat","coordinates","latitude","lng","longitude","name","url","image_url"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport { distance } from '../../util/distance_util'\r\nimport ShowMap from \"../map/show_map\";\r\nimport \"../../stylesheets/map.scss\";\r\nimport \"./cafe.scss\"\r\nimport LoadingPage from './loader';\r\n\r\nconst apiKey = require(\"../../keys/keys\").YELP_API_KEY;\r\n\r\n// DELETE KEY LATER!!\r\nconst TAKEOUTLATER = \"UZittz7h5GXfqGN6CtGVeBd9Slxryw_l5kvsV8fRpS4D3jT9Zk0GnLWhvUsziHOoI52fl290Sg3JqCmJXPFxk3ooFdqTgSzja1AtBMQjTRQbXz2bDNEoc6TqZVBwXnYx\"\r\n\r\n\r\n\r\nclass Cafe extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            randomCafe: \"\", // USE THIS FOR MAIN PHOTO\r\n            cafeFromYelpApi: \"\", //THIS HAS YELP API DATA\r\n            leftOverCafes: [],\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.reRoll = this.reRoll.bind(this);\r\n        this.calculateDistance = this.calculateDistance.bind(this);\r\n        this.calculateTime = this.calculateTime.bind(this);\r\n        this.applyExtraFilters = this.applyExtraFilters.bind(this);\r\n    }\r\n\r\n\r\n\r\n\r\n    selectRandomCafe(cafe_array) {\r\n        // Lets filter cafes before we select a random cafe\r\n        return cafe_array[Math.floor(Math.random() * cafe_array.length)];\r\n\r\n    }\r\n\r\n\r\n    formatTime(fourDigitTime) {\r\n        let hours24 = parseInt(fourDigitTime.substring(0, 2));\r\n        let hours = ((hours24 + 11) % 12) + 1;\r\n        let amPm = hours24 > 11 ? \"pm\" : \"am\";\r\n        let minutes = fourDigitTime.substring(2);\r\n        return hours + \":\" + minutes + amPm;\r\n    }\r\n\r\n    calculateTime(hours) {\r\n        let dateApi = new Date();\r\n        let day = dateApi.getDay();\r\n        if (!hours) return null\r\n        if (!hours[0].open[day]) {\r\n            return \"Unavailable Time For This Day\"\r\n        } else {\r\n            return this.formatTime(hours[0].open[day].end);\r\n        }\r\n\r\n    }\r\n\r\n    calculateDistance(cafes) {\r\n        //Return array with cafes distance\r\n        let addedDistance = cafes.map(cafe => {\r\n            cafe.distance_away = distance(\r\n                this.props.filters.my_lat,\r\n                this.props.filters.my_lng,\r\n                cafe.coordinates_latitude,\r\n                cafe.coordinates_longitude,\r\n            );\r\n            return cafe;\r\n        })\r\n\r\n        return addedDistance\r\n\r\n    }\r\n\r\n\r\n    applyExtraFilters(cafes) {\r\n        return cafes.filter(cafe => cafe.distance_away < this.props.filters.miles_away);\r\n    }\r\n\r\n\r\n    reRoll() {\r\n        this.props.rerollCafes(this.state.leftOverCafes);\r\n    }\r\n\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n        this.reRoll();\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.randomCafe !== this.props.randomCafe){\r\n            yelp\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        debugger\r\n        const { loading } = this.props;\r\n        if (loading) { return <LoadingPage />; }\r\n        if (this.props.cafes.length === 0) return null;\r\n        if (!this.props.yelpCafe) return null;\r\n\r\n\r\n        debugger\r\n     \r\n\r\n        let display_address = this.props.yelpCafe.location.display_address;\r\n        let time = this.calculateTime(this.props.yelpCafe.hours);\r\n        let lat = this.props.yelpCafe.coordinates.latitude;\r\n        let lng = this.props.yelpCafe.coordinates.longitude;\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                <h1>{this.props.yelpCafe.name}</h1>\r\n                <br />\r\n                <h1>Open until {time} Today</h1>\r\n                <br />\r\n                <h1>\r\n                    {display_address[0]}, {display_address[1]}\r\n                </h1>\r\n                <h1>\r\n                    <a href={this.props.yelpCafe.url}>View on Yelp</a>\r\n                </h1>\r\n                <br />\r\n                <img src={this.props.yelpCafe.image_url}></img>\r\n                <ShowMap key={lat} lat={lat} lng={lng} />\r\n                <button onClick={this.handleClick}>Show me another cafe!</button>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Cafe;"]},"metadata":{},"sourceType":"module"}