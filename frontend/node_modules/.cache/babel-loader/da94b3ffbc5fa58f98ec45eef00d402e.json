{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { clearCafes, rerollCafes, fetchYelpCafeById } from \"../../actions/cafe_actions\";\nimport Cafe from '../cafe/cafe'; //Filter before\n\nconst mapStateToProps = state => {\n  return {\n    cafes: Object.values(state.entities.cafes),\n    filters: state.entities.filters,\n    loading: state.loading.indexLoading,\n    yelp_cafe: state.entities.yelpCafe\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCafes: () => dispatch(clearCafes()),\n  rerollCafes: cafes => dispatch(rerollCafes(cafes)),\n  fetchYelpCafeById: id => dispatch(fetchYelpCafeById(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cafe);","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/cafe/cafe_container.js"],"names":["connect","clearCafes","rerollCafes","fetchYelpCafeById","Cafe","mapStateToProps","state","cafes","Object","values","entities","filters","loading","indexLoading","yelp_cafe","yelpCafe","mapDispatchToProps","dispatch","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,iBAAlC,QAA2D,4BAA3D;AACA,OAAOC,IAAP,MAAiB,cAAjB,C,CAGA;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACI,QAAN,CAAeH,KAA7B,CADJ;AAEHI,IAAAA,OAAO,EAAEL,KAAK,CAACI,QAAN,CAAeC,OAFrB;AAGHC,IAAAA,OAAO,EAAEN,KAAK,CAACM,OAAN,CAAcC,YAHpB;AAIHC,IAAAA,SAAS,EAAER,KAAK,CAACI,QAAN,CAAeK;AAJvB,GAAP;AAOH,CARD;;AAWA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,UAAU,EAAE,MAAMgB,QAAQ,CAAChB,UAAU,EAAX,CADY;AAEtCC,EAAAA,WAAW,EAAEK,KAAK,IAAIU,QAAQ,CAACf,WAAW,CAACK,KAAD,CAAZ,CAFQ;AAGtCJ,EAAAA,iBAAiB,EAAEe,EAAE,IAAID,QAAQ,CAACd,iBAAiB,CAACe,EAAD,CAAlB;AAHK,CAAL,CAAnC;;AAOA,eAAelB,OAAO,CAACK,eAAD,EAAkBW,kBAAlB,CAAP,CAA6CZ,IAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { clearCafes, rerollCafes, fetchYelpCafeById } from \"../../actions/cafe_actions\";\r\nimport Cafe from '../cafe/cafe';\r\n\r\n\r\n//Filter before\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cafes: Object.values(state.entities.cafes),\r\n        filters: state.entities.filters,\r\n        loading: state.loading.indexLoading,\r\n        yelp_cafe: state.entities.yelpCafe,\r\n    };\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  clearCafes: () => dispatch(clearCafes()),\r\n  rerollCafes: cafes => dispatch(rerollCafes(cafes)),\r\n  fetchYelpCafeById: id => dispatch(fetchYelpCafeById(id))\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cafe);\r\n"]},"metadata":{},"sourceType":"module"}