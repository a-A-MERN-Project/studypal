{"ast":null,"code":"import { RECEIVE_CURRENT_USER, LOGOUT_CURRENT_USER, RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nconst sessionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      return { ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n\n    case LOGOUT_CURRENT_USER:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n\n    case RECEIVE_USER_SIGN_IN:\n      //  ;\n      return { ...state,\n        isSignedIn: true,\n        user: action.currentUser.data\n      };\n\n    default:\n      return state;\n  }\n}; //Wilson's code\n// const sessionReducer = (state = { id: null }, action) => {\n//     Object.freeze(state)\n//     let newState = Object.assign({}, state)\n//     switch (action.type) {\n//         case RECEIVE_CURRENT_USER:\n//             newState.id = action.currentUser.id;\n//             return newState;\n//         case LOGOUT_CURRENT_USER:\n//             // return{ isAuthenticated: false, user: undefined};\n//             newState.id = null;\n//             return newState;\n//         default:\n//             return state;\n//     }\n// }\n\n\nexport default sessionReducer;","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/reducers/session_reducer.js"],"names":["RECEIVE_CURRENT_USER","LOGOUT_CURRENT_USER","RECEIVE_USER_SIGN_IN","initialState","isAuthenticated","user","sessionReducer","state","action","type","currentUser","undefined","isSignedIn","data"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,mBAA/B,EAAoDC,oBAApD,QAAgF,4BAAhF;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACrD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKT,oBAAL;AAEE,aAAM,EACA,GAAGO,KADH;AAEAH,QAAAA,eAAe,EAAE,CAAC,CAACI,MAAM,CAACE,WAF1B;AAGAL,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAHb,OAAN;;AAKF,SAAKT,mBAAL;AAEI,aAAM;AACFG,QAAAA,eAAe,EAAE,KADf;AAEFC,QAAAA,IAAI,EAACM;AAFH,OAAN;;AAIJ,SAAKT,oBAAL;AACI;AACA,aAAM,EACF,GAAGK,KADD;AAEFK,QAAAA,UAAU,EAAE,IAFV;AAGFP,QAAAA,IAAI,EAAEG,MAAM,CAACE,WAAP,CAAmBG;AAHvB,OAAN;;AAKJ;AACI,aAAON,KAAP;AAvBR;AAyBH,CA1BD,C,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeD,cAAf","sourcesContent":["import { RECEIVE_CURRENT_USER, LOGOUT_CURRENT_USER, RECEIVE_USER_SIGN_IN } from '../actions/session_actions'\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n};\n\nconst sessionReducer = (state = initialState, action) => {\n    switch(action.type){\n      \n        case RECEIVE_CURRENT_USER:\n         \n          return{\n                ...state,\n                isAuthenticated: !!action.currentUser,\n                user: action.currentUser\n            };\n        case LOGOUT_CURRENT_USER:\n             \n            return{\n                isAuthenticated: false,\n                user:undefined\n            };\n        case RECEIVE_USER_SIGN_IN:\n            //  ;\n            return{\n                ...state,\n                isSignedIn: true,\n                user: action.currentUser.data\n            };\n        default: \n            return state;\n    }\n};\n\n\n//Wilson's code\n// const sessionReducer = (state = { id: null }, action) => {\n//     Object.freeze(state)\n//     let newState = Object.assign({}, state)\n//     switch (action.type) {\n//         case RECEIVE_CURRENT_USER:\n//             newState.id = action.currentUser.id;\n//             return newState;\n//         case LOGOUT_CURRENT_USER:\n//             // return{ isAuthenticated: false, user: undefined};\n//             newState.id = null;\n//             return newState;\n//         default:\n//             return state;\n//     }\n// }\n\nexport default sessionReducer;"]},"metadata":{},"sourceType":"module"}