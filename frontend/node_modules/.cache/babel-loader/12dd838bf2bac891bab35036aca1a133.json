{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/cafe/cafe.jsx\";\nimport React from 'react';\nimport axios from \"axios\";\nimport distance from '../../util/distance_util';\nimport ShowMap from \"../map/show_map\";\nimport \"../../stylesheets/map.scss\";\nimport \"./cafe.scss\";\nimport LoadingPage from './loader';\n\nconst apiKey = require(\"../../keys/keys\").YELP_API_KEY; // DELETE KEY LATER!!\n\n\nconst TAKEOUTLATER = \"UZittz7h5GXfqGN6CtGVeBd9Slxryw_l5kvsV8fRpS4D3jT9Zk0GnLWhvUsziHOoI52fl290Sg3JqCmJXPFxk3ooFdqTgSzja1AtBMQjTRQbXz2bDNEoc6TqZVBwXnYx\";\n\nclass Cafe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomCafe: \"\",\n      // USE THIS FOR MAIN PHOTO\n      cafeFromYelpApi: \"\",\n      //THIS HAS YELP API DATA\n      leftOverCafes: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.reRoll = this.reRoll.bind(this);\n    this.calculateDistance = this.calculateDistance.bind(this);\n    this.calculateTime = this.calculateTime.bind(this);\n    this.applyExtraFilters = this.applyExtraFilters.bind(this);\n  }\n\n  selectRandomCafe(cafe_array) {\n    // Lets filter cafes before we select a random cafe\n    return cafe_array[Math.floor(Math.random() * cafe_array.length)];\n  }\n\n  formatTime(fourDigitTime) {\n    let hours24 = parseInt(fourDigitTime.substring(0, 2));\n    let hours = (hours24 + 11) % 12 + 1;\n    let amPm = hours24 > 11 ? \"pm\" : \"am\";\n    let minutes = fourDigitTime.substring(2);\n    return hours + \":\" + minutes + amPm;\n  }\n\n  calculateTime(hours) {\n    let dateApi = new Date();\n    let day = dateApi.getDay();\n    if (!hours) return null;\n\n    if (!hours[0].open[day]) {\n      return \"Unavailable Time For This Day\";\n    } else {\n      return this.formatTime(hours[0].open[day].end);\n    }\n  }\n\n  calculateDistance(cafes) {\n    //Return array with cafes distance\n    let addedDistance = cafes.map(cafe => {\n      cafe.distance_away = distance(this.props.filters.my_lat, this.props.filters.my_lng, cafe.coordinates_latitude, cafe.coordinates_longitude);\n      return cafe;\n    });\n    return addedDistance;\n  }\n\n  applyExtraFilters(cafes) {\n    return cafes.filter(cafe => cafe.distance_away < this.props.filters.miles_away);\n  }\n\n  reRoll() {\n    this.props.rerollCafes(this.state.leftOverCafes);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.reRoll();\n  }\n\n  render() {\n    const {\n      loading\n    } = this.props;\n\n    if (loading) {\n      return React.createElement(LoadingPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n\n    if (this.props.cafes.length === 0) return null;\n\n    if (!this.props.yelp_cafe) {\n      let cafes = this.applyExtraFilters(this.calculateDistance(this.props.cafes));\n      let randomCafe = this.selectRandomCafe(cafes);\n      let leftOverCafes = cafes.filter(ele => {\n        return ele.id !== randomCafe.id;\n      });\n      this.setState({\n        randomCafe: randomCafe,\n        leftOverCafes: leftOverCafes\n      });\n      if (cafes.length === 1) this.props.history.push(`/retry`);\n      this.props.fetchYelpCafeById(randomCafe.id).then(cafe => console.log(\"THIS YELP REQUEST WORKED\"));\n    }\n\n    if (!this.props.yelp_cafe) return null;\n    let display_address = this.props.yelp_cafe.location.display_address;\n    let time = this.calculateTime(this.props.yelp_cafe.hours);\n    let lat = this.props.yelp_cafe.coordinates.latitude;\n    let lng = this.props.yelp_cafe.coordinates.longitude;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.props.yelp_cafe.name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Open until \", time, \" Today\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, display_address[0], \", \", display_address[1]), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: this.props.yelp_cafe.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"View on Yelp\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.props.yelp_cafe.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(ShowMap, {\n      key: lat,\n      lat: lat,\n      lng: lng,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Show me another cafe!\"));\n  }\n\n}\n\nexport default Cafe;","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/cafe/cafe.jsx"],"names":["React","axios","distance","ShowMap","LoadingPage","apiKey","require","YELP_API_KEY","TAKEOUTLATER","Cafe","Component","constructor","props","state","randomCafe","cafeFromYelpApi","leftOverCafes","handleClick","bind","reRoll","calculateDistance","calculateTime","applyExtraFilters","selectRandomCafe","cafe_array","Math","floor","random","length","formatTime","fourDigitTime","hours24","parseInt","substring","hours","amPm","minutes","dateApi","Date","day","getDay","open","end","cafes","addedDistance","map","cafe","distance_away","filters","my_lat","my_lng","coordinates_latitude","coordinates_longitude","filter","miles_away","rerollCafes","e","preventDefault","render","loading","yelp_cafe","ele","id","setState","history","push","fetchYelpCafeById","then","console","log","display_address","location","time","lat","coordinates","latitude","lng","longitude","name","url","image_url"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport distance from '../../util/distance_util'\nimport ShowMap from \"../map/show_map\";\nimport \"../../stylesheets/map.scss\";\nimport \"./cafe.scss\"\nimport LoadingPage from './loader';\n\nconst apiKey = require(\"../../keys/keys\").YELP_API_KEY;\n\n// DELETE KEY LATER!!\nconst TAKEOUTLATER = \"UZittz7h5GXfqGN6CtGVeBd9Slxryw_l5kvsV8fRpS4D3jT9Zk0GnLWhvUsziHOoI52fl290Sg3JqCmJXPFxk3ooFdqTgSzja1AtBMQjTRQbXz2bDNEoc6TqZVBwXnYx\"\n\n\n\nclass Cafe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomCafe: \"\", // USE THIS FOR MAIN PHOTO\n      cafeFromYelpApi: \"\", //THIS HAS YELP API DATA\n      leftOverCafes: [],\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.reRoll = this.reRoll.bind(this);\n    this.calculateDistance = this.calculateDistance.bind(this);\n    this.calculateTime = this.calculateTime.bind(this);\n    this.applyExtraFilters = this.applyExtraFilters.bind(this);\n  }\n\n\n  selectRandomCafe(cafe_array) {\n    // Lets filter cafes before we select a random cafe\n    return cafe_array[Math.floor(Math.random() * cafe_array.length)];\n    \n  }\n\n\n  formatTime(fourDigitTime) {\n    let hours24 = parseInt(fourDigitTime.substring(0, 2));\n    let hours = ((hours24 + 11) % 12) + 1;\n    let amPm = hours24 > 11 ? \"pm\" : \"am\";\n    let minutes = fourDigitTime.substring(2);\n    return hours + \":\" + minutes + amPm;\n  }\n\n  calculateTime(hours) {\n    let dateApi = new Date();\n    let day = dateApi.getDay();\n    if (!hours) return null\n    if (!hours[0].open[day]) {\n      return \"Unavailable Time For This Day\"\n    } else{\n      return this.formatTime(hours[0].open[day].end);\n    }\n      \n  }\n\n  calculateDistance(cafes){\n    //Return array with cafes distance\n    let addedDistance = cafes.map(cafe => {\n      cafe.distance_away = distance(\n        this.props.filters.my_lat,\n        this.props.filters.my_lng,\n        cafe.coordinates_latitude,\n        cafe.coordinates_longitude,\n      );\n      return cafe;\n    })\n\n    return addedDistance\n\n  }\n\n  \n  applyExtraFilters(cafes){\n        \n    return cafes.filter(cafe => cafe.distance_away < this.props.filters.miles_away);\n    \n  }\n\n\n  reRoll() {\n    \n    this.props.rerollCafes(this.state.leftOverCafes);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.reRoll();\n  }\n\n  render() {\n    const { loading } = this.props;\n    if (loading) { return <LoadingPage />; }\n    \n    if (this.props.cafes.length === 0) return null;\n\n\n    if (!this.props.yelp_cafe) {\n      \n      let cafes = this.applyExtraFilters(this.calculateDistance(this.props.cafes));\n      let randomCafe = this.selectRandomCafe(cafes);\n      let leftOverCafes = cafes.filter(ele => {\n        return ele.id !== randomCafe.id;\n      });\n\n      this.setState(\n        {\n          randomCafe: randomCafe,\n          leftOverCafes: leftOverCafes\n        },\n\n      );\n\n     \n\n      if (cafes.length === 1) this.props.history.push(`/retry`)\n      this.props.fetchYelpCafeById(randomCafe.id).then(cafe => console.log(\"THIS YELP REQUEST WORKED\"))\n    }\n\n    if (!this.props.yelp_cafe) return null;\n   \n\n    let display_address = this.props.yelp_cafe.location.display_address;\n    let time = this.calculateTime(this.props.yelp_cafe.hours);\n    let lat = this.props.yelp_cafe.coordinates.latitude;\n    let lng = this.props.yelp_cafe.coordinates.longitude;\n\n   \n\n    return (\n      <div>\n        \n        <h1>{this.props.yelp_cafe.name}</h1>\n        <br />\n        <h1>Open until {time} Today</h1>\n        <br/>\n        <h1>\n          {display_address[0]}, {display_address[1]}\n        </h1>\n        <h1>\n          <a href={this.props.yelp_cafe.url}>View on Yelp</a>\n        </h1>\n        <br />\n        <img src={this.props.yelp_cafe.image_url}></img>\n        <ShowMap key={lat} lat={lat} lng={lng} />\n        <button onClick={this.handleClick}>Show me another cafe!</button>\n      </div>\n    );\n  }\n}\n\n\nexport default Cafe;"]},"metadata":{},"sourceType":"module"}