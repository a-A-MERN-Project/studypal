{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/carousel/carousel.jsx\";\nimport React from 'react';\nimport { useState, useCallback } from 'react';\nimport { set } from 'mongoose';\n\nfunction Carousel(props) {\n  const [isDown, setDown] = useState(false);\n  const [startX, setX] = useState(null);\n  const [transLeftOffset, setLeftOffset] = useState(null);\n  const [dragSpeed, setDrag] = useState(props.dragSpeed);\n  const [cref, setCref] = useState(React.createRef()); // handle Snap To Sides\n\n  handleSnap = () => {\n    // const { isDown, startX, transLeftOffset } = this.state\n    const {\n      _data,\n      itemWidth,\n      itemSideOffsets\n    } = this.props;\n    const carousel = this.cRef.current; // Resetting\n\n    this.setState({\n      isDown: false\n    });\n    carousel.classList.remove('active'); // handeling Threshold\n    // (1) getting transValue\n\n    const tempThresholdOffset = this.giveMeIntValOf(carousel.firstChild.style.transform); // (2) items width - 30(first & last item removed margins) - containerWidth(b/c of ending part)\n\n    const end = _data.length * (itemWidth + 2 * itemSideOffsets) - 30 - carousel.offsetWidth; // (3) check if we passing from threshold ( handeling Snap To Sides )\n\n    if (tempThresholdOffset < 0 || tempThresholdOffset > end) {\n      this.setState({\n        isDown: false\n      });\n      carousel.firstChild.style.cssText = `\n        transform: translateX(${tempThresholdOffset < 0 ? 0 : end}px);\n        transition: transform 0.5s cubic-bezier(.25,.72,.51,.96);\n      `;\n    }\n  }; //Helper\n\n\n  function giveMeIntValOf(el) {\n    // extracting 20 from translateX(20px) and converting it to integer with parsInt\n    return parseInt(el.replace('translateX(', '').replace('px)', ''), 10);\n  } // mouse Leave\n\n\n  handleMouseLeave = e => {\n    this.handleSnap();\n  }; // mouse Up\n\n\n  handleMouseUp = e => {\n    this.handleSnap();\n  }; // mouse Move\n\n\n  handleMouseMove = e => {\n    const {\n      isDown,\n      startX,\n      transLeftOffset,\n      dragSpeed\n    } = this.state;\n    const carousel = this.cRef.current;\n    if (!isDown) return;\n    e.preventDefault();\n    const x = e.pageX - carousel.offsetLeft;\n    const walk = (x - startX) * dragSpeed;\n    carousel.firstChild.style.transform = `translateX(${transLeftOffset + walk}px)`;\n  };\n\n  function handleMouseDown(event) {\n    const carousel = cref.current;\n    event.persist();\n    carousel.classList.add('active');\n\n    const _startX = event.pageX - carousel.offsetLeft;\n\n    const _transposeLeftOffset = giveMeIntValOf(carousel.firstChild.style.transform);\n\n    setDown(true);\n    setX(_startX);\n    setLeftOffset(_transposeLeftOffset); //Reset transition\n\n    const x = event.pageX - carousel.offsetLeft;\n    const walk = (x - startX) * dragSpeed;\n    carousel.firstChild.style.cssText = `\n        transform: translateX(${transLeftOffset + walk}px);\n        transition: transform 0.0s ease-in-out;\n      `;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Carousel Test\");\n}\n\nexport default Carousel;","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/carousel/carousel.jsx"],"names":["React","useState","useCallback","set","Carousel","props","isDown","setDown","startX","setX","transLeftOffset","setLeftOffset","dragSpeed","setDrag","cref","setCref","createRef","handleSnap","_data","itemWidth","itemSideOffsets","carousel","cRef","current","setState","classList","remove","tempThresholdOffset","giveMeIntValOf","firstChild","style","transform","end","length","offsetWidth","cssText","el","parseInt","replace","handleMouseLeave","e","handleMouseUp","handleMouseMove","state","preventDefault","x","pageX","offsetLeft","walk","handleMouseDown","event","persist","add","_startX","_transposeLeftOffset"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useCallback} from 'react';\r\nimport { set } from 'mongoose';\r\n\r\nfunction Carousel(props) {\r\n\r\n    const [isDown, setDown] = useState(false);\r\n    const [startX, setX] = useState(null);\r\n    const [transLeftOffset, setLeftOffset] = useState(null);\r\n    const [dragSpeed, setDrag] = useState(props.dragSpeed)\r\n    const [cref, setCref] = useState(React.createRef())\r\n\r\n\r\n    // handle Snap To Sides\r\n    handleSnap = () => {\r\n        // const { isDown, startX, transLeftOffset } = this.state\r\n        const { _data, itemWidth, itemSideOffsets } = this.props\r\n        const carousel = this.cRef.current\r\n\r\n        // Resetting\r\n        this.setState({ isDown: false })\r\n        carousel.classList.remove('active')\r\n\r\n        // handeling Threshold\r\n        // (1) getting transValue\r\n        const tempThresholdOffset = this.giveMeIntValOf(carousel.firstChild.style.transform)\r\n        // (2) items width - 30(first & last item removed margins) - containerWidth(b/c of ending part)\r\n        const end = _data.length * (itemWidth + (2 * itemSideOffsets)) - 30 - carousel.offsetWidth\r\n\r\n        // (3) check if we passing from threshold ( handeling Snap To Sides )\r\n        if (tempThresholdOffset < 0 || tempThresholdOffset > end) {\r\n            this.setState({ isDown: false })\r\n            carousel.firstChild.style.cssText = `\r\n        transform: translateX(${ tempThresholdOffset < 0 ? 0 : end}px);\r\n        transition: transform 0.5s cubic-bezier(.25,.72,.51,.96);\r\n      `;\r\n        }\r\n    }\r\n\r\n    //Helper\r\n\r\n    function giveMeIntValOf(el) {\r\n        // extracting 20 from translateX(20px) and converting it to integer with parsInt\r\n        return parseInt(el.replace('translateX(', '').replace('px)', ''), 10)\r\n    } \r\n\r\n    // mouse Leave\r\n    handleMouseLeave = (e) => {\r\n        this.handleSnap()\r\n    }\r\n\r\n\r\n    // mouse Up\r\n    handleMouseUp = (e) => {\r\n        this.handleSnap();\r\n    }\r\n\r\n\r\n    // mouse Move\r\n    handleMouseMove = (e) => {\r\n        const { isDown, startX, transLeftOffset, dragSpeed } = this.state\r\n        const carousel = this.cRef.current\r\n\r\n        if (!isDown) return\r\n        e.preventDefault()\r\n\r\n        const x = e.pageX - carousel.offsetLeft\r\n        const walk = (x - startX) * dragSpeed\r\n\r\n        carousel.firstChild.style.transform = `translateX(${transLeftOffset + walk}px)`;\r\n    }\r\n\r\n\r\n\r\n    function handleMouseDown(event) {\r\n        const carousel = cref.current;\r\n        event.persist()\r\n\r\n        carousel.classList.add('active');\r\n\r\n        const _startX = event.pageX - carousel.offsetLeft;\r\n        const _transposeLeftOffset = giveMeIntValOf(carousel.firstChild.style.transform)\r\n\r\n        setDown(true);\r\n        setX(_startX);\r\n        setLeftOffset(_transposeLeftOffset);\r\n\r\n        //Reset transition\r\n\r\n        const x = event.pageX - carousel.offsetLeft;\r\n        const walk = (x- startX) * dragSpeed;\r\n        carousel.firstChild.style.cssText = `\r\n        transform: translateX(${transLeftOffset + walk}px);\r\n        transition: transform 0.0s ease-in-out;\r\n      `;\r\n\r\n\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            Carousel Test\r\n            \r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Carousel;"]},"metadata":{},"sourceType":"module"}