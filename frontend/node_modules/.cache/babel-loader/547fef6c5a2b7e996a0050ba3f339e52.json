{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { selectRandomCafe } from \"../../util/filters_util\";\nimport { clearCafes, rerollCafes, fetchYelpCafeById } from \"../../actions/cafe_actions\";\nimport Cafe from '../cafe/cafe';\n\nconst mapStateToProps = state => {\n  //Get random Yelp Cafe before coming into Props\n  let randomCafe = selectRandomCafe(Object.values(state.entities.cafes)); //This is yelpcafe being pulled from yelp api\n\n  debugger;\n  return {\n    cafes: Object.values(state.entities.cafes),\n    filters: state.entities.filters,\n    loading: state.loading.indexLoading,\n    yelp_cafe: state.entities.yelpCafe,\n    randomCa\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCafes: () => dispatch(clearCafes()),\n  rerollCafes: cafes => dispatch(rerollCafes(cafes)),\n  fetchYelpCafeById: id => dispatch(fetchYelpCafeById(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cafe);","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/cafe/cafe_container.js"],"names":["connect","selectRandomCafe","clearCafes","rerollCafes","fetchYelpCafeById","Cafe","mapStateToProps","state","randomCafe","Object","values","entities","cafes","filters","loading","indexLoading","yelp_cafe","yelpCafe","randomCa","mapDispatchToProps","dispatch","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,iBAAlC,QAA2D,4BAA3D;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAWA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B;AACA,MAAIC,UAAU,GAAGP,gBAAgB,CAACQ,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACI,QAAN,CAAeC,KAA7B,CAAD,CAAjC,CAF6B,CAI7B;;AAEA;AACA,SAAO;AACHA,IAAAA,KAAK,EAAEH,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACI,QAAN,CAAeC,KAA7B,CADJ;AAEHC,IAAAA,OAAO,EAAEN,KAAK,CAACI,QAAN,CAAeE,OAFrB;AAGHC,IAAAA,OAAO,EAAEP,KAAK,CAACO,OAAN,CAAcC,YAHpB;AAIHC,IAAAA,SAAS,EAAET,KAAK,CAACI,QAAN,CAAeM,QAJvB;AAKHC,IAAAA;AALG,GAAP;AAQH,CAfD;;AAkBA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,UAAU,EAAE,MAAMkB,QAAQ,CAAClB,UAAU,EAAX,CADY;AAEtCC,EAAAA,WAAW,EAAES,KAAK,IAAIQ,QAAQ,CAACjB,WAAW,CAACS,KAAD,CAAZ,CAFQ;AAGtCR,EAAAA,iBAAiB,EAAEiB,EAAE,IAAID,QAAQ,CAAChB,iBAAiB,CAACiB,EAAD,CAAlB;AAHK,CAAL,CAAnC;;AAOA,eAAerB,OAAO,CAACM,eAAD,EAAkBa,kBAAlB,CAAP,CAA6Cd,IAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { selectRandomCafe } from \"../../util/filters_util\"\r\nimport { clearCafes, rerollCafes, fetchYelpCafeById } from \"../../actions/cafe_actions\";\r\nimport Cafe from '../cafe/cafe';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //Get random Yelp Cafe before coming into Props\r\n    let randomCafe = selectRandomCafe(Object.values(state.entities.cafes))\r\n\r\n    //This is yelpcafe being pulled from yelp api\r\n  \r\n    debugger\r\n    return {\r\n        cafes: Object.values(state.entities.cafes),\r\n        filters: state.entities.filters,\r\n        loading: state.loading.indexLoading,\r\n        yelp_cafe: state.entities.yelpCafe,\r\n        randomCa\r\n    };\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  clearCafes: () => dispatch(clearCafes()),\r\n  rerollCafes: cafes => dispatch(rerollCafes(cafes)),\r\n  fetchYelpCafeById: id => dispatch(fetchYelpCafeById(id))\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cafe);\r\n"]},"metadata":{},"sourceType":"module"}