{"ast":null,"code":"import { distance } from \"./distance_util\";\nexport const selectRandomCafe = cafe_array => {\n  // Lets filter cafes before we select a random cafe\n  return cafe_array[Math.floor(Math.random() * cafe_array.length)];\n};\nexport const calculateDistance = (cafes, filters) => {\n  //Return array with cafes distance\n  let addedDistance = cafes.map(cafe => {\n    cafe.distance_away = distance(this.props.filters.my_lat, this.props.filters.my_lng, cafe.coordinates_latitude, cafe.coordinates_longitude);\n    return cafe;\n  });\n  return addedDistance;\n};\nexport const applyExtraFilters = cafes => {\n  return cafes.filter(cafe => cafe.distance_away < this.props.filters.miles_away);\n};","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/util/filters_util.js"],"names":["distance","selectRandomCafe","cafe_array","Math","floor","random","length","calculateDistance","cafes","filters","addedDistance","map","cafe","distance_away","props","my_lat","my_lng","coordinates_latitude","coordinates_longitude","applyExtraFilters","filter","miles_away"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,iBAAvB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,UAAD,IAAgB;AAC5C;AACA,SAAOA,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,UAAU,CAACI,MAAtC,CAAD,CAAjB;AAEH,CAJM;AAOP,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACjD;AACA,MAAIC,aAAa,GAAGF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AAClCA,IAAAA,IAAI,CAACC,aAAL,GAAqBb,QAAQ,CACzB,KAAKc,KAAL,CAAWL,OAAX,CAAmBM,MADM,EAEzB,KAAKD,KAAL,CAAWL,OAAX,CAAmBO,MAFM,EAGzBJ,IAAI,CAACK,oBAHoB,EAIzBL,IAAI,CAACM,qBAJoB,CAA7B;AAMA,WAAON,IAAP;AACH,GARmB,CAApB;AAUA,SAAOF,aAAP;AAEH,CAdM;AAiBP,OAAO,MAAMS,iBAAiB,GAAIX,KAAD,IAAW;AACxC,SAAOA,KAAK,CAACY,MAAN,CAAaR,IAAI,IAAIA,IAAI,CAACC,aAAL,GAAqB,KAAKC,KAAL,CAAWL,OAAX,CAAmBY,UAA7D,CAAP;AACH,CAFM","sourcesContent":["import {distance} from \"./distance_util\"\r\n\r\nexport const selectRandomCafe = (cafe_array) => {\r\n    // Lets filter cafes before we select a random cafe\r\n    return cafe_array[Math.floor(Math.random() * cafe_array.length)];\r\n\r\n};\r\n\r\n\r\nexport const calculateDistance = (cafes, filters) => {\r\n    //Return array with cafes distance\r\n    let addedDistance = cafes.map(cafe => {\r\n        cafe.distance_away = distance(\r\n            this.props.filters.my_lat,\r\n            this.props.filters.my_lng,\r\n            cafe.coordinates_latitude,\r\n            cafe.coordinates_longitude,\r\n        );\r\n        return cafe;\r\n    })\r\n\r\n    return addedDistance\r\n\r\n}\r\n\r\n\r\nexport const applyExtraFilters = (cafes) => {\r\n    return cafes.filter(cafe => cafe.distance_away < this.props.filters.miles_away);\r\n}"]},"metadata":{},"sourceType":"module"}