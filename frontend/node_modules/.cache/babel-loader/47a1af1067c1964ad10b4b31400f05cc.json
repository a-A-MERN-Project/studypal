{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { selectRandomCafe, calculateDistance, applyExtraFilters } from \"../../util/filters_util\";\nimport { clearCafes, rerollCafes, fetchYelpCafeById } from \"../../actions/cafe_actions\";\nimport Cafe from '../cafe/cafe';\n\nconst mapStateToProps = state => {\n  debugger;\n  let cafes = Object.values(state.entities.cafes);\n  let filters = state.entities.filters;\n  let cafeTimeFilter = calculateDistance(cafes, filters);\n  let filteredCafes = applyExtraFilters(cafes, filters); //Get random Yelp Cafe before coming into Props\n\n  let randomCafe = selectRandomCafe(Object.values(state.entities.cafes));\n  return {\n    cafes: cafes,\n    filteredCafes: filteredCafes,\n    filters: filters,\n    loading: state.loading.indexLoading,\n    randomCafe: randomCafe,\n    yelpCafe: state.entities.yelpCafe\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCafes: () => dispatch(clearCafes()),\n  rerollCafes: cafes => dispatch(rerollCafes(cafes)),\n  fetchYelpCafeById: id => dispatch(fetchYelpCafeById(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cafe);","map":{"version":3,"sources":["/mnt/c/Users/antr9/Desktop/studypal-master/frontend/src/components/cafe/cafe_container.js"],"names":["connect","selectRandomCafe","calculateDistance","applyExtraFilters","clearCafes","rerollCafes","fetchYelpCafeById","Cafe","mapStateToProps","state","cafes","Object","values","entities","filters","cafeTimeFilter","filteredCafes","randomCafe","loading","indexLoading","yelpCafe","mapDispatchToProps","dispatch","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,iBAA9C,QAAuE,yBAAvE;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,iBAAlC,QAA2D,4BAA3D;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAE/B;AAEA,MAAIC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACI,QAAN,CAAeH,KAA7B,CAAZ;AACA,MAAII,OAAO,GAAGL,KAAK,CAACI,QAAN,CAAeC,OAA7B;AACA,MAAIC,cAAc,GAAGb,iBAAiB,CAACQ,KAAD,EAAQI,OAAR,CAAtC;AACA,MAAIE,aAAa,GAAGb,iBAAiB,CAACO,KAAD,EAAQI,OAAR,CAArC,CAP+B,CAS/B;;AACA,MAAIG,UAAU,GAAGhB,gBAAgB,CAACU,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACI,QAAN,CAAeH,KAA7B,CAAD,CAAjC;AAGA,SAAO;AACLA,IAAAA,KAAK,EAAEA,KADF;AAELM,IAAAA,aAAa,EAAEA,aAFV;AAGLF,IAAAA,OAAO,EAAEA,OAHJ;AAILI,IAAAA,OAAO,EAAET,KAAK,CAACS,OAAN,CAAcC,YAJlB;AAKLF,IAAAA,UAAU,EAAEA,UALP;AAMLG,IAAAA,QAAQ,EAAEX,KAAK,CAACI,QAAN,CAAeO;AANpB,GAAP;AASD,CAtBD;;AAuBA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,UAAU,EAAE,MAAMkB,QAAQ,CAAClB,UAAU,EAAX,CADY;AAEtCC,EAAAA,WAAW,EAAEK,KAAK,IAAIY,QAAQ,CAACjB,WAAW,CAACK,KAAD,CAAZ,CAFQ;AAGtCJ,EAAAA,iBAAiB,EAAEiB,EAAE,IAAID,QAAQ,CAAChB,iBAAiB,CAACiB,EAAD,CAAlB;AAHK,CAAL,CAAnC;;AAOA,eAAevB,OAAO,CAACQ,eAAD,EAAkBa,kBAAlB,CAAP,CAA6Cd,IAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { selectRandomCafe, calculateDistance, applyExtraFilters } from \"../../util/filters_util\"\r\nimport { clearCafes, rerollCafes, fetchYelpCafeById } from \"../../actions/cafe_actions\";\r\nimport Cafe from '../cafe/cafe';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  debugger\r\n\r\n  let cafes = Object.values(state.entities.cafes);\r\n  let filters = state.entities.filters;\r\n  let cafeTimeFilter = calculateDistance(cafes, filters)\r\n  let filteredCafes = applyExtraFilters(cafes, filters)\r\n\r\n  //Get random Yelp Cafe before coming into Props\r\n  let randomCafe = selectRandomCafe(Object.values(state.entities.cafes))\r\n\r\n   \r\n  return {\r\n    cafes: cafes,\r\n    filteredCafes: filteredCafes,\r\n    filters: filters,\r\n    loading: state.loading.indexLoading,\r\n    randomCafe: randomCafe,\r\n    yelpCafe: state.entities.yelpCafe,\r\n  };\r\n\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  clearCafes: () => dispatch(clearCafes()),\r\n  rerollCafes: cafes => dispatch(rerollCafes(cafes)),\r\n  fetchYelpCafeById: id => dispatch(fetchYelpCafeById(id))\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cafe);"]},"metadata":{},"sourceType":"module"}